{"version":3,"file":"index-B1bIth-v.js","sources":["../../src/pages/components/BasicTable/index.vue","../../src/pages/Favorites/Detail.vue","../../src/pages/components/SearchBar/index.vue","../../src/pages/Favorites/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"basic-table\">\r\n        <el-table ref=\"basicTable\" v-loading=\"isLoading\" element-loading-text=\"Loading...\"\r\n            element-loading-background=\"rgba(255, 255, 255, 0.8)\" :data=\"tableData\" :border=\"isBorder\"\r\n            :header-cell-style=\"{ background: '#F8F9FA', color: '#242933', fontsize: '14px', height: '48px' }\"\r\n            :cell-style=\"{ fontsize: '14px', height: '48px' }\" :row-key=\"getRowKeys\" :highlight-current-row=\"isRadio\"\r\n            @selection-change=\"handleSelectionChange\" @current-change=\"handleCurrentChange\">\r\n            <el-table-column v-if=\"isSelect\" type=\"selection\" :reserve-selection=\"true\" width=\"55\" />\r\n            <el-table-column v-if=\"isIndex\" label=\"序号\" type=\"index\" width=\"80\" />\r\n            <template v-for=\"item in headerList\">\r\n                <!--操作按钮-->\r\n                <el-table-column v-if=\"item.prop === 'opt'\" :key=\"item.prop + 'opt'\" :prop=\"item.prop\"\r\n                    :label=\"item.label\" :min-width=\"item.width\" :fixed=\"item.fixed\">\r\n                    <template #default=\"scope\">\r\n                        <div v-if=\"!item.isSlot\">\r\n                            <el-button v-for=\"btn in item.btns\" :key=\"btn.name\" :type=\"btn.type\" plain size=\"small\"\r\n                                :disabled=\"calculateBtnDisable(btn.disable, scope.row)\"\r\n                                @click=\"handleBtnClick(btn.name, scope.row)\">\r\n                                {{ btn.label }}\r\n                            </el-button>\r\n                        </div>\r\n                        <div v-if=\"item.isSlot\">\r\n                            <slot name=\"btn\" :rowData=\"scope.row\" :index=\"scope.$index\" />\r\n                        </div>\r\n                    </template>\r\n                </el-table-column>\r\n                <!--跳转链接-->\r\n                <el-table-column v-else-if=\"item.prop === 'jump'\" :key=\"item.prop + 'jump'\" :prop=\"item.prop\"\r\n                    :label=\"item.label\" :min-width=\"item.width\" :fixed=\"item.fixed\">\r\n                    <template #default=\"scope\">\r\n                        <router-link v-for=\"link in item.links\" :key=\"link.name\" :to=\"link.path + '/' + scope.row.id\"\r\n                            class=\"r-link\">\r\n                            {{ link.label }}\r\n                        </router-link>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column v-else-if=\"item.prop === 'formatter'\" :key=\"item.prop + 'formatter'\" :prop=\"item.prop\"\r\n                    :label=\"item.label\" :min-width=\"item.width\" :fixed=\"item.fixed\">\r\n                    <template #default=\"scope\">\r\n                        <slot name=\"formatter\" :label=\"item.label\" :rowData=\"scope.row\" :index=\"scope.$index\" />\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column v-else :key=\"item.prop\" :prop=\"item.prop\" :label=\"item.label\" :min-width=\"item.width\"\r\n                    :fixed=\"item.fixed\" show-overflow-tooltip>\r\n                    <template #default=\"scope\">\r\n                        <span v-if=\"item.map\">{{ setMapText(item.map, scope.row[item.prop]) }}</span>\r\n                        <span v-else>{{ scope.row[item.prop] }}</span>\r\n                    </template>\r\n                </el-table-column>\r\n            </template>\r\n        </el-table>\r\n        <div>\r\n            <!-- <div v-if=\"isMore10000 && props.total > 10000\" class=\"md5-page-style\">\r\n                <div class=\"text\">总数量:<span>{{ total }}</span></div>\r\n                <el-tooltip class=\"box-item\" effect=\"dark\" content=\"最多展示搜索结果的前10000条数据\" placement=\"bottom-start\">\r\n                    <el-pagination background :page-size=\"pageSize\" layout=\"total,prev, pager, next\" :total=\"10000\"\r\n                        :current-page=\"currentPage\" @current-change=\"handlePageChange\" />\r\n                </el-tooltip>\r\n            </div> -->\r\n            <el-pagination background :page-size=\"pageSize\" layout=\"total,prev, pager, next\" :total=\"total\"\r\n                :current-page=\"currentPage\" @current-change=\"handlePageChange\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'CommonBasicTable'\r\n}\r\n</script>\r\n\r\n<script setup>\r\nimport { ref, defineProps, defineEmits, defineExpose } from 'vue'\r\n\r\nconst props = defineProps({\r\n    tableData: {\r\n        type: Array,\r\n        required: true,\r\n        default: () => []\r\n    },\r\n    headerList: {\r\n        type: Array,\r\n        required: true,\r\n        default: () => []\r\n    },\r\n    pageSize: {\r\n        type: Number,\r\n        default: () => 10\r\n    },\r\n    total: {\r\n        type: Number,\r\n        default: () => 0\r\n    },\r\n    currentPage: {\r\n        type: Number,\r\n        default: () => 1\r\n    },\r\n    isBorder: {\r\n        type: Boolean,\r\n        default: () => false\r\n    },\r\n    isLoading: {\r\n        type: Boolean,\r\n        default: () => false\r\n    },\r\n    isIndex: {\r\n        type: Boolean,\r\n        default: () => false\r\n    },\r\n    isSelect: {\r\n        type: Boolean,\r\n        default: () => false\r\n    },\r\n    isRadio: {\r\n        type: Boolean,\r\n        default: () => false\r\n    },\r\n    rowKey: {\r\n        type: String,\r\n        default: ''\r\n    },\r\n    isMore10000: {\r\n        type: Boolean,\r\n        default: () => false\r\n    }\r\n})\r\n\r\nconst emit = defineEmits(['opt-click', 'page-change'])\r\n\r\n// const store = useStore()\r\n\r\n// const showPage = computed(() => props.total > props.pageSize)\r\n\r\n// // code-text映射\r\n// const setMapText = (mapName, key) => {\r\n//     const map = store.state.app[mapName]\r\n//     return map[key] || '未知'\r\n// }\r\n\r\n// 按钮是否disable\r\nconst calculateBtnDisable = (disable, row) => {\r\n    let isDisable = true\r\n\r\n    if (disable === undefined) {\r\n        isDisable = false\r\n    } else {\r\n        isDisable = true\r\n        for (const key in disable) {\r\n            if (row[key] === undefined || row[key] !== disable[key]) {\r\n                isDisable = false\r\n            }\r\n        }\r\n    }\r\n    return isDisable\r\n}\r\n\r\n// 点击操作按钮\r\nconst handleBtnClick = (name, row) => {\r\n    emit('opt-click', name, row)\r\n}\r\n\r\n// 点击翻页\r\nconst handlePageChange = (page) => {\r\n    emit('page-change', page)\r\n}\r\n\r\n// 选中翻页记忆\r\nconst getRowKeys = (row) => {\r\n    return row[props.rowKey] || row.id || row.md5\r\n}\r\n\r\n// 选中行\r\nconst handleSelectionChange = (selection) => {\r\n    emit('select-change', selection)\r\n}\r\n\r\n// 单选\r\nconst handleCurrentChange = (val) => {\r\n    emit('current-change', val)\r\n}\r\n\r\nconst basicTable = ref(null)\r\n\r\ndefineExpose({ basicTable })\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.basic-table {\r\n    margin: 20px 0;\r\n    width: 100%;\r\n\r\n    .el-table {\r\n        width: 100%;\r\n    }\r\n\r\n    .r-link {\r\n        margin-right: 8px;\r\n    }\r\n\r\n    .el-pagination {\r\n        float: right;\r\n        margin: 20px 0 0;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .md5-page-style {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        float: right;\r\n\r\n        .text {\r\n            margin: 20px 20px 0\r\n        }\r\n    }\r\n}\r\n</style>","<template>\r\n    <el-drawer v-model=\"drawerVisible\" :title=\"title\">\r\n        <el-card>\r\n            <template #header>\r\n                <div class=\"card-header\">\r\n                    <span>{{ basicDetailsTitle }}</span>\r\n                </div>\r\n            </template>\r\n            \r\n            <el-form label-suffix=\":\" :model=\"form\">\r\n                <el-form-item v-if=\"fieldShouldDisplay('product_name')\" label=\"产品名称\">\r\n                    {{ form.product_name }}\r\n                </el-form-item>\r\n                <el-form-item v-if=\"fieldShouldDisplay('benefits')\" label=\"利益点\">\r\n                    {{ form.benefits }}\r\n                </el-form-item>\r\n                <!-- <el-form-item v-if=\"fieldShouldDisplay('benefits_unfixed')\" label=\"可变利益点\">\r\n                    {{ form.benefits_unfixed }}\r\n                </el-form-item> -->\r\n                <el-form-item v-if=\"fieldShouldDisplay('target_audience')\" label=\"角色设定\">\r\n                    {{ form.target_audience }}\r\n                </el-form-item>\r\n\r\n\r\n                <div v-if=\"isIndustryIn([2])\">\r\n                  <div class=\"md-20 text-[15px] font-medium\">脚本结构：</div>\r\n                  <div class=\"ml-10\">\r\n                    <el-form-item v-if=\"fieldShouldDisplay('structure_begin')\" label=\"开头吸睛\">\r\n                      <span>{{ joinstr(form.structure_begin) }}</span>\r\n                    </el-form-item>\r\n                    <el-form-item v-if=\"fieldShouldDisplay('structure_transition')\" label=\"激发兴趣\">\r\n                      <span>{{ joinstr(form.structure_transition) }}</span>\r\n                    </el-form-item>\r\n                    <el-form-item v-if=\"fieldShouldDisplay('structure_middle')\" label=\"产品优势\">\r\n                      <span>{{ joinstr(form.structure_middle) }}</span>\r\n                    </el-form-item>\r\n                    <el-form-item v-if=\"fieldShouldDisplay('structure_end')\" label=\"行动号召\">\r\n                      <span>{{ joinstr(form.structure_end) }}</span>\r\n                    </el-form-item>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <el-form-item v-if=\"fieldShouldDisplay('number_of_character')\" label=\"口播类型\">\r\n                  <span>{{ form.number_of_character || '' }}</span>\r\n                </el-form-item>\r\n                <el-form-item v-if=\"fieldShouldDisplay('character_profile')\" label=\"演员角色\">\r\n                  <span>{{ form.character_profile || '' }}</span>\r\n                </el-form-item>\r\n\r\n                <el-form-item v-if=\"fieldShouldDisplay('script_scene')\" label=\"剧本场景\">\r\n                  <span>{{ form.script_scene || '' }}</span>\r\n                </el-form-item>\r\n                <el-form-item v-if=\"fieldShouldDisplay('script_style')\" label=\"剧本类型\">\r\n                  <span>{{ form.script_style || '' }}</span>\r\n                </el-form-item>\r\n                <el-form-item v-if=\"fieldShouldDisplay('script_mode')\" label=\"模式选择\">\r\n                  <span>{{ form.script_mode || '' }}</span>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n        </el-card>\r\n        <el-card>\r\n            <template #header>\r\n                <div class=\"card-header\">\r\n                    <span>{{ scriptContentTitle }}</span>\r\n                </div>\r\n            </template>\r\n            <div class=\"overflow-y-auto flex-grow custom-scroll inspiration\" ref=\"inspirationRef\">\r\n                <MarkdownPreview :remarkPlugins=\"[remarkGfm]\" class=\"result flex flex-col flex-1 h-full w-full\"\r\n                    :source=\"scriptContent\" />\r\n            </div>\r\n\r\n        </el-card>\r\n        <el-card :title=\"scriptContentTitle\">\r\n            <el-button type=\"text\" @click=\"onScriptContentChange\">编辑</el-button>\r\n            <el-button type=\"text\" @click=\"copyScriptContent\">复制</el-button>\r\n            <el-button type=\"text\" @click=\"deleteScriptContent\">删除</el-button>\r\n        </el-card>\r\n        <el-dialog v-model=\"outerVisible\" title=\"编辑\" width=\"50%\" :before-close=\"handleClose\" align-center>\r\n            <el-input v-model=\"scriptContent\" type=\"textarea\" placeholder=\"请输入内容\" :rows=\"25\" resize=\"none\" />\r\n\r\n            <el-dialog v-model=\"innerVisible\" width=\"500\" append-to-body align-center>\r\n                <span>内容尚未保存， 需要保存编辑内容吗？</span>\r\n\r\n                <template #header=\"{ titleId, titleClass }\">\r\n                    <div class=\"flex justify-between\">\r\n                        <div class=\"flex items-center gap-[4px]\">\r\n                            <div>\r\n                                <el-icon class=\"text-[red]\"><i-ep-warningFilled /></el-icon>\r\n                            </div>\r\n                            <h4 :id=\"titleId\" :class=\"titleClass\">提示</h4>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n                <template #footer>\r\n                    <div class=\"dialog-footer\">\r\n                        <el-button type=\"primary\" @click=\"handleSave\" color=\"#6a50fd\" :loading=\"saveStatus\">\r\n                            保存内容\r\n                        </el-button>\r\n                        <el-button @click=\"exitEdit\">退出编辑</el-button>\r\n                    </div>\r\n                </template>\r\n            </el-dialog>\r\n\r\n            <template #footer>\r\n                <span class=\"dialog-footer\">\r\n                    <el-button @click=\"outerVisible = false\">取消</el-button>\r\n                    <el-button type=\"primary\" @click=\"handleSave\" color=\"#6a50fd\" :loading=\"saveStatus\">保存</el-button>\r\n                </span>\r\n            </template>\r\n        </el-dialog>\r\n    </el-drawer>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineExpose, nextTick, ref, defineProps, computed, watch, reactive, toRefs, defineEmits } from 'vue';\r\nimport { postUpdateFavorite, getFavoriteDetail, PostRename, deleteFavorite, batchDeleteFavorite } from '@service/task';\r\nimport MarkdownPreview from '@uivjs/vue-markdown-preview'\r\nimport { copyToClipboard } from '../../utils/utils'\r\nimport remarkGfm from 'remark-gfm'\r\nimport { useTaskStore } from '@store/taskStore'\r\n\r\nconst taskStore = useTaskStore()\r\n\r\nconst title = '灵感详情';\r\nconst drawerVisible = ref(false);\r\n\r\nconst emits = defineEmits(['deleteItem',])\r\n\r\nconst props = defineProps({\r\n    detailId: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n})\r\n\r\nconst joinstr = (str) => {\r\n    if (str && str.length > 0) {\r\n        return str.join('、')\r\n    }\r\n    return ''\r\n}\r\n\r\n\r\nconst outerVisible = ref(false)\r\nconst inspirationRef = ref(null)\r\nconst state = reactive({\r\n    industry_id: null,\r\n    form: {\r\n        product_name: \"\",\r\n        benefits: \"\",\r\n        benefits_unfixed: \"\",\r\n        target_audience: \"\",\r\n        script_scene: \"\",\r\n        script_style: \"\",\r\n        script_mode: \"\",\r\n        structure_begin: [],\r\n        structure_end: [],\r\n        structure_middle: [],\r\n        structure_transition: [],\r\n        number_of_character: '',\r\n        character_profile: ''\r\n    },\r\n})\r\n\r\nconst basicDetailsTitle = '灵感信息';\r\n\r\nconst scriptContentTitle = '灵感内容';\r\nconst scriptContent = ref('');\r\n\r\nconst onScriptContentChange = () => {\r\n    outerVisible.value = true;\r\n};\r\n\r\nconst exitEdit = () => {\r\n    outerVisible.value = false;\r\n    scriptContent.value = '';\r\n};\r\n\r\n\r\nconst isIndustryIn = computed(() => (industryIds) => industryIds.includes(state.form.industry_id))\r\n\r\nconst fieldShouldDisplay = computed( () => (field) => {\r\n    console.log(state.form.industry_id)\r\n    let industry_id = null;\r\n    if (state.form.industry_id) {\r\n        industry_id = state.form.industry_id;\r\n    } else if (state.form.structure_begin?.length > 0) {\r\n        industry_id = 2     \r\n    } else {\r\n        industry_id = 1\r\n    }\r\n    console.log({industry_id})\r\n    return taskStore.fieldShouldDisplay(field, industry_id);\r\n})\r\n\r\n\r\nconst titleId = 'titleId';\r\nconst titleClass = 'titleClass';\r\n\r\n\r\nconst copyScriptContent = () => {\r\n    console.log('复制灵感内容:', scriptContent.value);\r\n    const element = inspirationRef.value\r\n    const htmlContent = element.outerHTML\r\n    copyToClipboard(htmlContent, 'text/html')\r\n};\r\n\r\n\r\n\r\nconst deleteScriptContent = async () => {\r\n    const params = { id: props.detailId }\r\n    await emits('deleteItem', params)\r\n    drawerVisible.value = false\r\n};\r\n\r\nconst saveStatus = ref(false);\r\n\r\nconst handleSave = async () => {\r\n    saveStatus.value = true;\r\n    await postUpdateFavorite(props.detailId, { content: scriptContent.value });\r\n    saveStatus.value = false;\r\n    outerVisible.value = false\r\n};\r\n\r\nconst init = async (newVal) => {\r\n    const { data: { parent_snapshot, content } } = await getFavoriteDetail(newVal);\r\n    state.form = parent_snapshot;\r\n    scriptContent.value = content;\r\n}\r\n\r\nwatch(\r\n    () => props.detailId,\r\n    (newVal, oldVal) => {\r\n        if (newVal !== null) {\r\n            nextTick(() => {\r\n                init(newVal)\r\n            })\r\n        }\r\n    },\r\n    { deep: true, immediate: true }\r\n)\r\n\r\nconst {\r\n    form\r\n} = toRefs(state)\r\n\r\n\r\ndefineExpose({ drawerVisible })\r\n</script>","<template>\r\n    <el-input v-model=\"keyword\" class=\"input-with-search\" :placeholder=\"placeholder\" clearable @clear=\"handleSearch\"\r\n        @keyup.enter=\"handleSearch\">\r\n        <template #append>\r\n            <el-button size=\"small\" @click=\"handleSearch\">\r\n                <el-icon>\r\n                    <i-ep-search />\r\n                </el-icon>\r\n            </el-button>\r\n        </template>\r\n    </el-input>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"CommonSearchBar\",\r\n};\r\n</script>\r\n\r\n<script setup>\r\nimport { ref, defineProps, defineEmits } from \"vue\";\r\n\r\ndefineProps({\r\n    placeholder: {\r\n        type: String,\r\n        default: () => \"请输入搜素内容\",\r\n    },\r\n});\r\n\r\nconst emit = defineEmits([\"search\"]);\r\n\r\nconst keyword = ref(\"\");\r\nconst handleSearch = () => {\r\n    emit(\"search\", keyword.value);\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.input-with-search {\r\n    width: 350px;\r\n}\r\n</style>","<template>\r\n    <div class=\"flex flex-col h-full w-[100%] mt-[100px]\">\r\n        <el-row class=\"flex items-center mb-[20px]\">\r\n            <el-row :span=\"6\">\r\n                <SearchBar placeholder=\"请输入搜索关键词\" @search=\"handleSearch\" />\r\n            </el-row>\r\n            <el-row :span=\"6\">\r\n                <el-button @click=\"batchDelete\" type=\"primary\">批量删除</el-button>\r\n            </el-row>\r\n        </el-row>\r\n        <BascicTable :total=\"totalCount\" :current-page=\"currentPage\" :is-loading=\"isLoaing\" :is-select=\"isSelect\"\r\n            :headerList=\"headerList\" :pageSize=\"pagesize\" @select-change=\"handleSelectChange\"\r\n            @page-change=\"handlePageChange\" :table-data=\"tableData\">\r\n            <template #formatter=\"rowData\">\r\n                <div class=\"flex items-center\" v-if=\"rowData.label === '灵感名称'\">\r\n                    <span class=\"mr-[2px]\">\r\n                        {{ rowData.rowData.name }}\r\n                    </span>\r\n                    <el-popover :visible=\"popovers\" @hide=\"resetPopoverStatus\" placement=\"right\" :width=\"400\"\r\n                        trigger=\"click\">\r\n                        <template #reference>\r\n                            <el-icon @click=\"edit(rowData.rowData)\" class=\"cursor-pointer\"><i-ep-editPen /></el-icon>\r\n                        </template>\r\n                        <el-form :model=\"currentScript\">\r\n                            <el-form-item label=\"脚本名称\">\r\n                                <el-input v-model=\"currentScript.name\" maxlength=\"32\" />\r\n                            </el-form-item>\r\n                        </el-form>\r\n                        <el-button @click=\"closePopover(rowData.index)\">取消</el-button>\r\n                        <el-button type=\"primary\" @click=\"confirmEdit\">确定</el-button>\r\n                    </el-popover>\r\n                </div>\r\n            </template>\r\n            <template #btn=\"rowData\">\r\n                <div class=\"flex items-center\">\r\n                    <el-button type=\"text\" plain @click=\"handleEdit(rowData.rowData)\">查看</el-button>\r\n                    <el-button type=\"text\" plain @click=\"handleDelete(rowData.rowData)\">删除</el-button>\r\n                </div>\r\n            </template>\r\n        </BascicTable>\r\n        <Detail @deleteItem=\"handleDelete\" :detailId=\"currentFavoriteId\" ref=\"detailRef\" />\r\n    </div>\r\n</template>\r\n<script setup>\r\nimport BascicTable from '@components/BasicTable/index.vue';\r\nimport Detail from './Detail.vue'\r\nimport { copyToClipboard, eventTrackingFunc } from '../../utils/utils'\r\nimport dayjs from 'dayjs'\r\nimport SearchBar from '@components/SearchBar/index.vue'\r\nimport { computed, onMounted, reactive, toRefs, ref } from 'vue';\r\nimport { getFavoriteList, PostRename, deleteFavorite, batchDeleteFavorite } from '@service/task';\r\nimport { ElMessageBox, ElMessage } from 'element-plus'\r\n\r\nconst columns = [\r\n    {\r\n        label: '灵感名称',\r\n        prop: 'formatter',\r\n        width: 200\r\n    },\r\n    {\r\n        label: '创作者',\r\n        prop: 'open_id',\r\n        width: 100\r\n    },\r\n    {\r\n        label: '创建时间',\r\n        prop: 'create_time',\r\n        width: 150\r\n    },\r\n    {\r\n        label: '更新时间',\r\n        prop: 'update_time',\r\n        width: 150\r\n    },\r\n    {\r\n        label: '操作',\r\n        prop: 'opt',\r\n        width: 200,\r\n        isSlot: true,\r\n        fixed: 'right'\r\n    }\r\n]\r\n\r\nconst tableList = computed(() => {\r\n    return [\r\n    ]\r\n})\r\n\r\nconst popovers = ref(null);\r\n\r\nconst state = reactive({\r\n    headerList: columns,\r\n    tableData: [],\r\n    keyword: '',\r\n    currentPage: 1,\r\n    totalCount: 0,\r\n    pagesize: 10,\r\n    isLoaing: false,\r\n    isSelect: true,\r\n})\r\nconst currentScript = ref({});\r\nconst selectList = ref([]);\r\nconst detailRef = ref(null)\r\nconst editIndex = ref(null)\r\nconst editName = ref('')\r\nconst edit = (value) => {\r\n    currentScript.value = { ...value }; // 复制当前脚本数据\r\n}\r\n\r\n\r\nconst confirmEdit = async () => {\r\n    // 处理确认编辑逻辑\r\n\r\n    const item = tableData.value.find(item =>\r\n        item.id === currentScript.value.id\r\n    );\r\n    const params = {\r\n        favorite_id: currentScript.value.id,\r\n        name: currentScript.value.name\r\n    }\r\n    try {\r\n        const { code } = await PostRename(params)\r\n        if (code === 0) {\r\n            ElMessage({\r\n                message: '修改成功',\r\n                type: 'success',\r\n            })\r\n            item.name = currentScript.value.name\r\n            closePopover()\r\n            getTableData()\r\n        } else {\r\n            ElMessage({\r\n                message: '修改失败',\r\n                type: 'error',\r\n            })\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n};\r\n\r\nconst resetPopoverStatus = () => {\r\n    popovers.value = null;\r\n}\r\n\r\nconst closePopover = () => {\r\n    popovers.value = false; // 关闭弹出框\r\n\r\n};\r\n\r\nconst handlePageChange = (page) => {\r\n    state.currentPage = page\r\n    getTableData()\r\n}\r\n\r\n// 搜索\r\nconst handleSearch = (kw) => {\r\n    state.keyword = kw\r\n    state.currentPage = 1\r\n    getTableData()\r\n}\r\n\r\n// 多选\r\nconst handleSelectChange = (selection) => {\r\n    selectList.value = selection.map((item) => item.id);\r\n};\r\n\r\nconst getTableData = async () => {\r\n    state.isLoaing = true\r\n    const params = {\r\n        page: state.currentPage,\r\n        keyword: state.keyword,\r\n        pagesize: state.pagesize\r\n    }\r\n    try {\r\n        const { data: { list, count } } = await getFavoriteList(params)\r\n        state.tableData = list.map(item => {\r\n            item.create_time = dayjs(item.create_time).format('YYYY-MM-DD HH:mm:ss')\r\n            item.update_time = dayjs(item.update_time).format('YYYY-MM-DD HH:mm:ss')\r\n            return item\r\n        })\r\n        totalCount.value = count\r\n        state.isLoaing = false\r\n    } catch (e) {\r\n        state.isLoaing = false\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\n// 删除\r\nconst handleDelete = (val) => {\r\n    console.log('删除', val)\r\n    ElMessageBox.confirm('确定要删除吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n    }).then(async () => {\r\n        const res = await deleteFavorite({ favorite_id: val.id })\r\n        if (res.code === 0) {\r\n            getTableData()\r\n            ElMessage({\r\n                type: 'success',\r\n                message: '删除成功!'\r\n            })\r\n        }\r\n    }).catch(() => {\r\n        ElMessage({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// 批量删除\r\nconst batchDelete = async () => {\r\n    try {\r\n        await batchDeleteFavorite({ id_list: selectList.value })\r\n        await getTableData()\r\n        ElMessage({\r\n            type: 'success',\r\n            message: '删除成功!'\r\n        })\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nconst currentFavoriteId = ref(null)\r\n\r\nconst handleEdit = (row) => {\r\n    detailRef.value.drawerVisible = true\r\n    currentFavoriteId.value = row.id\r\n}\r\n\r\n\r\nonMounted(() => {\r\n    getTableData()\r\n})\r\n\r\nconst {\r\n    headerList,\r\n    tableData,\r\n    currentPage,\r\n    pagesize,\r\n    totalCount,\r\n    isLoaing,\r\n    isSelect,\r\n    keyword\r\n} = toRefs(state)\r\n\r\n</script>"],"names":["__default__","props","__props","emit","__emit","calculateBtnDisable","disable","row","isDisable","key","handleBtnClick","name","handlePageChange","page","getRowKeys","handleSelectionChange","selection","handleCurrentChange","val","basicTable","ref","__expose","title","basicDetailsTitle","scriptContentTitle","taskStore","useTaskStore","drawerVisible","emits","joinstr","str","outerVisible","inspirationRef","state","reactive","scriptContent","onScriptContentChange","exitEdit","isIndustryIn","computed","industryIds","fieldShouldDisplay","field","industry_id","_a","copyScriptContent","htmlContent","copyToClipboard","deleteScriptContent","params","saveStatus","handleSave","postUpdateFavorite","init","newVal","parent_snapshot","content","getFavoriteDetail","watch","oldVal","nextTick","form","toRefs","_ctx","_cache","_component_el_form_item","__unplugin_components_0","keyword","handleSearch","columns","popovers","currentScript","selectList","detailRef","edit","value","confirmEdit","item","tableData","code","PostRename","ElMessage","closePopover","getTableData","resetPopoverStatus","kw","handleSelectChange","list","count","getFavoriteList","dayjs","totalCount","handleDelete","ElMessageBox","deleteFavorite","batchDelete","batchDeleteFavorite","currentFavoriteId","handleEdit","onMounted","headerList","currentPage","pagesize","isLoaing","isSelect","_component_el_row","_component_el_button","__unplugin_components_1","_component_i_ep_editPen","__unplugin_components_2","_component_el_icon","__unplugin_components_3"],"mappings":"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"}