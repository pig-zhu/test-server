{"version":3,"file":"index-DDCD5N6r.js","sources":["../../src/service/convert.js","../../src/pages/Convert/index.vue"],"sourcesContent":["import request from '../utils/axios'\r\n\r\nexport const postUploadFileOss = (data) => {\r\n  return request({\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    url: `/file/upload/oss`,\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\nexport const getConvertList = async (params) => {\r\n  return request({\r\n    url: '/video/convert/list',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\nexport const postConvert = async (params) => {\r\n  return request({\r\n    url: '/video/convert',\r\n    method: 'post',\r\n    data: params\r\n  })\r\n}\r\n","<template>\r\n  <div class=\"convert-container\">\r\n    <div class=\"content-wrapper\">\r\n      <div class=\"page-header\">\r\n        <h2 class=\"text-[20px] font-medium text-[#333] flex items-center\">\r\n        视频颜色转换\r\n      </h2>\r\n      </div>\r\n\r\n      <div class=\"layout-container\">\r\n        <!-- 左侧布局 -->\r\n        <div class=\"left-column\">\r\n          <div class=\"card upload-card\">\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-title\">\r\n                上传视频<span class=\"remind_style\"> （支持mp4格式） </span>\r\n              </h2>\r\n              <el-upload\r\n                class=\"custom-upload\"\r\n                action=\"#\"\r\n                :http-request=\"handlUpload\"\r\n                :before-upload=\"handleBeforeUpload\"\r\n                :on-progress=\"handleProgress\"\r\n                :on-remove=\"handleRemove\"\r\n                :on-change=\"handleChange\"\r\n                :on-success=\"handleSuccess\"\r\n                :on-error=\"handleError\"\r\n                accept=\"video/* \"\r\n                multiple\r\n              >\r\n                <el-button type=\"primary\" class=\"upload-btn\">\r\n                  <el-icon class=\"upload-icon\"><Upload /></el-icon>上传视频\r\n                </el-button>\r\n              </el-upload>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"card setting-card\">\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-title\">颜色设置</h2>\r\n              <div class=\"hsv-selector\">\r\n                <div class=\"hsv-label\">HSV色相选择:</div>\r\n                <div class=\"color-controls\">\r\n                  <el-color-picker\r\n                    class=\"readonly-color-picker\"\r\n                    ref=\"colorPickerRef\"\r\n                    v-model=\"colorPicker\"\r\n                    size=\"large\"\r\n                  />\r\n                  <el-slider v-model=\"hue\" :min=\"0\" :max=\"179\" class=\"hsv-slider\" show-input />\r\n                </div>\r\n              </div>\r\n              <el-button\r\n                type=\"primary\"\r\n                @click=\"convert\"\r\n                :disabled=\"fileList.length == 0 || allFilesUploaded\"\r\n                class=\"convert-btn\"\r\n                >开始转换</el-button\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 右侧布局 -->\r\n        <div class=\"right-column\">\r\n          <div class=\"card result-card\">\r\n            <div class=\"card-content\">\r\n              <h2 class=\"card-title\">转换结果</h2>\r\n              <div class=\"table-container\">\r\n                <el-table :data=\"dataList\" stripe class=\"custom-table\">\r\n                  <el-table-column\r\n                    prop=\"origin_video.video_name\"\r\n                    label=\"视频名称\"\r\n                    width=\"220px\"\r\n                    show-overflow-tooltip\r\n                  />\r\n                  <el-table-column prop=\"status\" label=\"状态\" width=\"110\" align=\"center\">\r\n                    <template #default=\"{ row }\">\r\n                      <span\r\n                        :class=\"{\r\n                          'text-red': row.status === 'failed',\r\n                          'text-blue': row.status === 'waiting',\r\n                          'text-green': row.status === 'success'\r\n                        }\"\r\n                        class=\"status-text\"\r\n                      >\r\n                        <el-icon class=\"is-loading\" v-if=\"row.status === 'waiting'\">\r\n                          <Loading /> </el-icon\r\n                        >{{ row.statusRes }}</span\r\n                      >\r\n                    </template>\r\n                  </el-table-column>\r\n                  <el-table-column label=\"操作\" width=\"80\" align=\"center\">\r\n                    <template #default=\"{ row }\">\r\n                      <a\r\n                        class=\"download-link\"\r\n                        :class=\"{ disabled: row.status !== 'success' }\"\r\n                        @click=\"row.status === 'success' && downLoadData(row)\"\r\n                      >\r\n                        <span class=\"download-text\">下载</span>\r\n                      </a>\r\n                    </template>\r\n                  </el-table-column>\r\n                  <el-table-column prop=\"time\" label=\"创建时间\" min-width=\"140\" />\r\n                </el-table>\r\n              </div>\r\n              <el-pagination\r\n                @current-change=\"handlePageChange\"\r\n                :current-page=\"page\"\r\n                :page-size=\"pagesize\"\r\n                layout=\"prev, pager, next\"\r\n                :total=\"total\"\r\n                class=\"custom-pagination\"\r\n              ></el-pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus'\r\nconst baseUrl = import.meta.env.VITE_API_BASE_URL\r\nimport axios from 'axios'\r\nimport { Loading, Upload } from '@element-plus/icons-vue'\r\n\r\nimport { ref, onMounted, watch } from 'vue'\r\nimport { postUploadFileOss, getConvertList, postConvert } from '@/service/convert'\r\n\r\nconst allFilesUploaded = ref(true)\r\nconst page = ref(1)\r\nconst pagesize = ref(20)\r\nconst total = ref(0)\r\nconst hue = ref(30)\r\nonMounted(() => {\r\n  init()\r\n})\r\nconst init = async () => {\r\n  getConvertListFun()\r\n}\r\nconst dataList = ref([])\r\nconst fileList = ref([])\r\nconst colorPicker = ref('#FFFF00') // 初始颜色为黄色\r\nconst handleBeforeUpload = async (file) => {\r\n  // 检查文件类型\r\n  const validTypes = ['video/mp4']\r\n  if (!validTypes.includes(file.type)) {\r\n    ElMessage.error('只能上传 MP4类型的视频')\r\n    return false\r\n  }\r\n  return true\r\n}\r\nconst progress = ref(0)\r\nconst handlUpload = async (options) => {\r\n  const { file, onProgress, onSuccess, onError } = options\r\n  const form = new FormData()\r\n  form.append('file', file)\r\n  file.uploadStatus = 'uploading'\r\n  const formData = new FormData()\r\n  formData.append('file', file)\r\n  try {\r\n    const response = await axios.post('/api/file/upload/oss', formData, {\r\n      onUploadProgress: (event) => {\r\n        const percentCompleted = Math.round((event.loaded * 100) / event.total)\r\n        onProgress({ percent: percentCompleted })\r\n      }\r\n    })\r\n    if (response.data.code == 0) {\r\n      fileList.value.push(response.data.data.file_id)\r\n      file.uploadStatus = 'success'\r\n      ElMessage.success('上传成功!')\r\n    } else {\r\n      file.uploadStatus = 'error'\r\n      ElMessage.error('上传失败!')\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('上传失败!')\r\n  }\r\n}\r\nconst handleProgress = (event) => {\r\n  progress.value = event.percent\r\n}\r\n// 上传总数\r\nconst totalUploadCount = ref(0)\r\n// 上传成功总数\r\nconst successfulUploadCount = ref(0)\r\n\r\nconst handleSuccess = () => {\r\n  successfulUploadCount.value++\r\n  progress.value = 0\r\n}\r\nconst handleError = () => {\r\n  progress.value = 0\r\n}\r\n// 处理文件选择变化，计算上传总数\r\nconst handleChange = (file, fileList) => {\r\n  totalUploadCount.value = fileList.length\r\n}\r\n// 删除文件列表中对应文件的方法\r\nconst handleRemove = (file, fileListArr) => {\r\n  fileList.value = fileListArr\r\n}\r\nconst convert = async () => {\r\n  const params = {\r\n    video_ids: fileList.value,\r\n    hue_shift: hue.value,\r\n    saturation_scale: 1,\r\n    brightness_offset: 0\r\n  }\r\n  try {\r\n    const response = await postConvert(params)\r\n    if (response.code === 0) {\r\n      ElMessage.success('转换中...')\r\n      fileList.value = []\r\n      getConvertListFun()\r\n    } else {\r\n      throw new Error(response.message)\r\n    }\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nconst getConvertListFun = async () => {\r\n  const interval = 5000 // 轮询间隔时间，单位为毫秒\r\n  let attempt = 0\r\n  const params = {\r\n    page: page.value,\r\n    pagesize: pagesize.value\r\n  }\r\n  pollTaskStatus(attempt, interval, params)\r\n}\r\nlet pollingTimer = ref(null)\r\n\r\nconst pollTaskStatus = async (attempt, interval, params) => {\r\n  try {\r\n    const response = await getConvertList(params)\r\n    if (response.code === 0) {\r\n      const resData = response.data\r\n      dataList.value = resData.list\r\n      dataList.value.forEach((item) => {\r\n        switch (item.status) {\r\n          case 'success':\r\n            item.statusRes = '成功'\r\n            break\r\n          case 'waiting':\r\n            item.statusRes = '转换中...'\r\n            break\r\n          case 'failed':\r\n            item.statusRes = '失败'\r\n            break\r\n          default:\r\n            item.statusRes = '-'\r\n        }\r\n        item.time = item.create_time.replace('T', ' ')\r\n      })\r\n      total.value = resData.count\r\n      // 检查是否存在 status 为 waiting 的项\r\n      const hasWaitingStatus = dataList.value.some((item) => item.status === 'waiting')\r\n      if (hasWaitingStatus) {\r\n        // 如果存在，继续轮询并记录定时器 ID\r\n        pollingTimer.value = setTimeout(() => pollTaskStatus(attempt, interval, params), interval)\r\n      } else {\r\n        // 如果不存在，停止轮询\r\n        pollingTimer.value = null\r\n      }\r\n    } else {\r\n      // 处理其他响应代码\r\n      ElMessage.error('发生错误，请稍后重试!')\r\n      return\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('发生错误，请稍后重试!')\r\n    return\r\n  }\r\n}\r\nconst handlePageChange = (item) => {\r\n  page.value = item\r\n  // 清除上一次的轮询定时器\r\n  if (pollingTimer.value) {\r\n    clearTimeout(pollingTimer.value)\r\n    pollingTimer.value = null\r\n  }\r\n  getConvertListFun()\r\n}\r\nconst downLoadData = (item) => {\r\n  const link = document.createElement('a')\r\n  link.href = baseUrl + item.converted_video.video_url\r\n  link.download = `${item.converted_video.video_name}.mp4`\r\n  document.body.appendChild(link)\r\n  link.click()\r\n  document.body.removeChild(link)\r\n}\r\n\r\n// 监听 hue 值的变化\r\nwatch(hue, (newHue) => {\r\n  // 将 hue 值从 0 - 179 映射到 0 - 360 度\r\n  const hueDegree = (newHue / 179) * 360\r\n  // 饱和度和亮度固定为 100%\r\n  const saturation = 1\r\n  const value = 1\r\n  // 转换为 RGB 颜色\r\n  const rgbColor = hsvToRgb(hueDegree / 360, saturation, value)\r\n  colorPicker.value = rgbColor\r\n})\r\n// 监听 successfulUploadCount 值的变化\r\nwatch(successfulUploadCount, (newVal) => {\r\n  if (totalUploadCount.value == newVal) {\r\n    allFilesUploaded.value = false\r\n  }\r\n})\r\n// 将 HSV 颜色转换为 RGB 颜色\r\nconst hsvToRgb = (h, s, v) => {\r\n  let r, g, b\r\n  const i = Math.floor(h * 6)\r\n  const f = h * 6 - i\r\n  const p = v * (1 - s)\r\n  const q = v * (1 - f * s)\r\n  const t = v * (1 - (1 - f) * s)\r\n  switch (i % 6) {\r\n    case 0:\r\n      r = v\r\n      g = t\r\n      b = p\r\n      break\r\n    case 1:\r\n      r = q\r\n      g = v\r\n      b = p\r\n      break\r\n    case 2:\r\n      r = p\r\n      g = v\r\n      b = t\r\n      break\r\n    case 3:\r\n      r = p\r\n      g = q\r\n      b = v\r\n      break\r\n    case 4:\r\n      r = t\r\n      g = p\r\n      b = v\r\n      break\r\n    case 5:\r\n      r = v\r\n      g = p\r\n      b = q\r\n      break\r\n  }\r\n  // 将 RGB 值转换为十六进制颜色\r\n  const toHex = (c) => {\r\n    const hex = Math.round(c * 255).toString(16)\r\n    return hex.length === 1 ? '0' + hex : hex\r\n  }\r\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}`\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.convert-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.content-wrapper {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  height: 100%;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 24px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.page-title {\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n  color: var(--text-dark);\r\n  background: linear-gradient(135deg, #b891df, #63e2ff);\r\n  -webkit-background-clip: text;\r\n  background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n\r\n.layout-container {\r\n  display: flex;\r\n  gap: 24px;\r\n  align-items: flex-start;\r\n  flex: 1;\r\n  overflow: hidden;\r\n}\r\n\r\n.left-column {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n  width: 40%;\r\n  min-width: 350px;\r\n  overflow-y: auto;\r\n  padding-right: 4px;\r\n  max-height: 100%;\r\n}\r\n\r\n.right-column {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.card {\r\n  background: rgba(255, 255, 255, 0.8);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 16px;\r\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.06);\r\n  border: 1px solid rgba(255, 255, 255, 0.8);\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  position: relative;\r\n  height: auto;\r\n}\r\n\r\n.result-card {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.card:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 12px 36px rgba(94, 102, 215, 0.15);\r\n}\r\n\r\n.card::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 4px;\r\n  background: linear-gradient(135deg, rgb(144, 150, 255), rgb(133, 200, 255));\r\n}\r\n\r\n.card-content {\r\n  padding: 24px;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.table-container {\r\n  flex: 1;\r\n  overflow: auto;\r\n  border-radius: 12px;\r\n  min-height: 0;\r\n  max-height: calc(100vh - 220px);\r\n}\r\n\r\n.card-title {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  margin-bottom: 20px;\r\n  color: var(--text-dark);\r\n}\r\n\r\n.custom-upload {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.upload-btn {\r\n  background: linear-gradient(135deg, rgb(144, 150, 255), rgb(133, 200, 255));\r\n  border: none;\r\n  padding: 12px 20px;\r\n  border-radius: 10px;\r\n  transition: all 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.upload-btn:hover {\r\n  opacity: 0.9;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 15px rgba(99, 226, 255, 0.3);\r\n}\r\n\r\n.upload-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.remind_style {\r\n  margin-left: 12px;\r\n  color: var(--text-light);\r\n  font-size: 14px;\r\n}\r\n\r\n.hsv-selector {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.hsv-label {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: var(--text-dark);\r\n}\r\n\r\n.color-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n  margin-top: 8px;\r\n}\r\n\r\n.hsv-slider {\r\n  flex: 1;\r\n  min-width: 200px;\r\n}\r\n\r\n.convert-btn {\r\n  background: linear-gradient(135deg, #b066fe, #63e2ff);\r\n  border: none;\r\n  padding: 12px 24px;\r\n  border-radius: 10px;\r\n  font-weight: 500;\r\n  letter-spacing: 0.5px;\r\n  transition: all 0.3s ease;\r\n  align-self: flex-start;\r\n}\r\n\r\n.convert-btn:hover:not(:disabled) {\r\n  opacity: 0.9;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 15px rgba(99, 226, 255, 0.3);\r\n}\r\n\r\n.convert-btn:disabled {\r\n  background: #f0f0f0;\r\n  color: #aaa;\r\n  cursor: not-allowed;\r\n  opacity: 0.7;\r\n}\r\n\r\n.custom-table {\r\n  width: 100%;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  border: none;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.04);\r\n}\r\n\r\n:deep(.el-table) {\r\n  --el-table-border-color: rgba(228, 230, 244, 0.5);\r\n  --el-table-header-bg-color: rgba(248, 249, 255, 0.8);\r\n  --el-table-row-hover-bg-color: rgba(248, 249, 255, 0.7);\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n:deep(.el-table__header) {\r\n  font-weight: 600;\r\n}\r\n\r\n:deep(.el-table th) {\r\n  background-color: rgba(248, 249, 255, 0.9);\r\n  font-weight: 600;\r\n  color: var(--text-dark);\r\n  padding: 16px 12px;\r\n}\r\n\r\n:deep(.el-table__row) {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n:deep(.el-table__row:hover) {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.03);\r\n}\r\n:deep(.el-upload-list) {\r\n  margin-left: 20px;\r\n}\r\n\r\n.text-red {\r\n  color: #ff5252;\r\n}\r\n\r\n.text-blue {\r\n  color: #448aff;\r\n}\r\n\r\n.text-green {\r\n  color: #4caf50;\r\n}\r\n\r\n.download-link {\r\n  color: #6577ff;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  display: inline-block;\r\n  position: relative;\r\n}\r\n\r\n.download-text {\r\n  display: inline-block;\r\n  padding: 2px 0;\r\n}\r\n\r\n.download-link:hover:not(.disabled) {\r\n  color: #b066fe;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.download-link:hover:not(.disabled)::after {\r\n  width: 100%;\r\n}\r\n\r\n.download-link::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 0;\r\n  height: 1px;\r\n  background: linear-gradient(135deg, #b066fe, #63e2ff);\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.download-link.disabled {\r\n  color: #aaa;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.custom-pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  flex-shrink: 0;\r\n}\r\n\r\n:deep(.readonly-color-picker .el-color-picker__trigger) {\r\n  pointer-events: none; /* 禁用点击事件 */\r\n}\r\n\r\n:deep(.readonly-color-picker .el-icon) {\r\n  display: none !important; /* 移除默认的下拉箭头 */\r\n}\r\n\r\n@media (max-width: 992px) {\r\n  .layout-container {\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  .left-column {\r\n    width: 100%;\r\n    max-height: none;\r\n    overflow: visible;\r\n  }\r\n\r\n  .right-column {\r\n    width: 100%;\r\n    overflow: visible;\r\n  }\r\n\r\n  .table-container {\r\n    max-height: 50vh;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .color-controls {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .hsv-slider {\r\n    width: 100%;\r\n    max-width: none;\r\n    margin-top: 12px;\r\n  }\r\n\r\n  .custom-upload {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .remind_style {\r\n    margin-left: 0;\r\n    margin-top: 8px;\r\n  }\r\n}\r\n</style>\r\n"],"names":["getConvertList","params","request","postConvert","baseUrl","allFilesUploaded","ref","page","pagesize","total","hue","onMounted","init","getConvertListFun","dataList","fileList","colorPicker","handleBeforeUpload","file","ElMessage","progress","handlUpload","options","onProgress","onSuccess","onError","formData","response","axios","event","percentCompleted","handleProgress","totalUploadCount","successfulUploadCount","handleSuccess","handleError","handleChange","handleRemove","fileListArr","convert","error","attempt","pollTaskStatus","pollingTimer","interval","resData","item","handlePageChange","downLoadData","link","watch","newHue","hueDegree","rgbColor","hsvToRgb","newVal","h","s","v","r","g","b","i","f","q","t","toHex","c","hex"],"mappings":"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"}