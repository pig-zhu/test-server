{"version":3,"file":"Admin-CpbtYUw6.js","sources":["../../src/service/admin/llmModelPrompt.js","../../src/store/llmModelPromptStore.js","../../src/pages/Admin.vue"],"sourcesContent":["import request from '../../utils/axios'\r\n\r\nconst getLLMModelPrompts = async () => {\r\n  return await request.get('/admin/llm_model_prompts')\r\n}\r\n\r\nconst editLLMModelPrompt = async (id, params) => {\r\n  return await request.post(`/admin/llm_model_prompt/${id}`, params)\r\n}\r\n\r\nconst dashboardGenerated = async (params) => {\r\n  return await request.get(`/admin/dashboard/generated`, { params })\r\n}\r\n\r\nconst dashboardRmbg = async (params) => {\r\n  return await request.get(`/admin/dashboard/rmbg`, { params })\r\n}\r\n\r\nconst dashboardTts = async (params) => {\r\n  return await request.get(`/admin/dashboard/tts`, { params })\r\n}\r\n\r\nexport { getLLMModelPrompts, editLLMModelPrompt, dashboardGenerated, dashboardRmbg, dashboardTts }\r\n","import { defineStore } from 'pinia'\r\nimport { getLLMModelPrompts, editLLMModelPrompt } from '../service/admin/llmModelPrompt'\r\n\r\nexport const useLLMModelPromptStore = defineStore('LLMModelPromptStore',{\r\n  state: () => ({\r\n    prompts: []\r\n  }),\r\n  actions: {\r\n    async getLLMModelPrompts(params) {\r\n      return getLLMModelPrompts(params).then((res) => {\r\n        this.prompts = res.data.list\r\n      })\r\n    },\r\n\r\n    async editLLMModelPrompt(id, params) {\r\n      return editLLMModelPrompt(id, params)\r\n    }\r\n  }\r\n})\r\n","<template>\r\n  <div class=\"w-full h-full p-10 overflow-y-auto\">\r\n    <div class=\"date-filter-container mb-4\">\r\n    <div class=\"flex items-center mb-4\">\r\n      <span class=\"mr-2\">起:</span>\r\n      <el-date-picker\r\n        v-model=\"dateRange.startDate\"\r\n        type=\"date\"\r\n        placeholder=\"选择开始日期\"\r\n        format=\"YYYY-MM-DD\"\r\n        value-format=\"YYYY-MM-DD\"\r\n        :locale=\"zhCn\"\r\n        class=\"mr-4\"\r\n      />\r\n      <span class=\"mr-2\">止:</span>\r\n      <el-date-picker\r\n        v-model=\"dateRange.endDate\"\r\n        type=\"date\"\r\n        placeholder=\"选择结束日期\"\r\n        format=\"YYYY-MM-DD\"\r\n        value-format=\"YYYY-MM-DD\"\r\n        :locale=\"zhCn\"\r\n        class=\"mr-4\"\r\n      />\r\n      <el-button type=\"primary\" @click=\"handleDateQuery\">确定</el-button>\r\n    </div>\r\n    <div class=\"flex gap-8\">\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-label\">智能聊本:</span>\r\n        <span class=\"stat-value\">{{ statistics.chatbotCount }}</span>\r\n      </div>\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-label\">图片处理:</span>\r\n        <span class=\"stat-value\">{{ statistics.imageCount }}</span>\r\n      </div>\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-label\">语音合成:</span>\r\n        <span class=\"stat-value\">{{ statistics.audioCount }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    <el-form :model=\"searchForm\" label-width=\"80px\" class=\"search-form\">\r\n      <el-form-item label=\"Industry\">\r\n        <el-input v-model=\"searchForm.industry\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"Name\">\r\n        <el-select-v2 v-model=\"searchForm.model_id\" placeholder=\"Select\" :options=\"promptOptions\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"Prompt\">\r\n        <el-input\r\n          :autosize=\"{ minRows: 8, maxRows: 30 }\"\r\n          type=\"textarea\"\r\n          v-model=\"searchForm.prompt\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"onSubmit\">确定</el-button>\r\n        <el-button @click=\"resetSearch\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n    <el-button\r\n      class=\"mb-[10px]\"\r\n      type=\"success\"\r\n      @click=\"openCreateVoiceDialog\"\r\n      style=\"margin-top: 20px\"\r\n      >新建音色</el-button\r\n    >\r\n    <div class=\"publicSpeek\">公共语音库 </div>\r\n    <el-table :data=\"publicVoiceList\" style=\"width: 100%\">\r\n      <el-table-column type=\"index\" label=\"序号\" width=\"60\"></el-table-column>\r\n      <el-table-column prop=\"industry\" label=\"行业\"></el-table-column>\r\n      <el-table-column prop=\"emotion\" label=\"情绪\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"音色名称\"></el-table-column>\r\n      <el-table-column prop=\"gender\" label=\"音色性別\"></el-table-column>\r\n      <el-table-column prop=\"generate_count\" label=\"产出量\"> </el-table-column>\r\n      <el-table-column prop=\"generate_count\" label=\"产出排名\"> </el-table-column>\r\n      <el-table-column prop=\"generate_count\" label=\"创建时间\"> </el-table-column>\r\n      <el-table-column prop=\"created_by\" label=\"创建用戶\"> </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"180\">\r\n        <template #default=\"{ row }\">\r\n          <el-button type=\"text\" @click=\"editVoice(row)\">编辑</el-button>\r\n          <el-button type=\"text\" @click=\"deleteVoice(row.id)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-pagination\r\n        class=\"page-style\"\r\n        v-model:current-page=\"publicVoiceList.current_page\"\r\n        v-model:page-size=\"publicVoiceList.page_size\"\r\n        :page-sizes=\"[10, 20, 30, 40]\"\r\n        layout=\"sizes, prev, pager, next\"\r\n        :total=\"publicVoiceList.total_count\"\r\n        @size-change=\"(newSize) => handleSizeChange(newSize, true)\"\r\n        @current-change=\"(newCurrent) => handleCurrentChange(newCurrent, true)\"\r\n      />\r\n    <div class=\"publicSpeek\">私有语音库 </div>\r\n    <el-table :data=\"personVoiceList\" style=\"width: 100%\">\r\n      <el-table-column type=\"index\" label=\"序号\" width=\"60\"></el-table-column>\r\n      <el-table-column prop=\"industry\" label=\"行业\"></el-table-column>\r\n      <el-table-column prop=\"emotion\" label=\"情绪\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"音色名称\"></el-table-column>\r\n      <el-table-column prop=\"gender\" label=\"音色性別\"></el-table-column>\r\n      <el-table-column prop=\"generate_count\" label=\"产出量\"> </el-table-column>\r\n      <el-table-column prop=\"generate_count\" label=\"产出排名\"> </el-table-column>\r\n      <el-table-column prop=\"generate_count\" label=\"创建时间\"> </el-table-column>\r\n      <el-table-column prop=\"created_by\" label=\"创建用戶\"> </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"180\">\r\n        <template #default=\"{ row }\">\r\n          <el-button type=\"text\" @click=\"editVoice(row)\">编辑</el-button>\r\n          <el-button type=\"text\" @click=\"deleteVoice(row.id)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-pagination\r\n      class=\"page-style\"\r\n      v-model:current-page=\"personVoiceList.current_page\"\r\n      v-model:page-size=\"personVoiceList.page_size\"\r\n      :page-sizes=\"[10, 20, 30, 40]\"\r\n      layout=\"sizes, prev, pager, next\"\r\n      :total=\"personVoiceList.total_count\"\r\n      @size-change=\"(newSize) => handleSizeChange(newSize, false)\"\r\n      @current-change=\"(newCurrent) => handleCurrentChange(newCurrent, false)\"\r\n    />\r\n    <!-- 编辑弹窗 -->\r\n    <el-dialog title=\"编辑音色\" v-model=\"showEditDialog\">\r\n      <el-form :model=\"editForm\" label-width=\"150px\">\r\n        <el-form-item label=\"行业\">\r\n          <el-input v-model=\"editForm.industry\" placeholder=\"请输入行业\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"情绪\">\r\n          <el-input v-model=\"editForm.emotion\" placeholder=\"请输入情绪\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"音色名称\">\r\n          <el-input v-model=\"editForm.name\" placeholder=\"请输入音色名称\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"音色性别\">\r\n          <el-select v-model=\"editForm.gender\" placeholder=\"选择性别\">\r\n            <el-option label=\"男\" value=\"male\"></el-option>\r\n            <el-option label=\"女\" value=\"female\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <!-- 修改上传头像图片为手动上传 -->\r\n        <el-form-item label=\"上传头像图片\">\r\n          <el-upload\r\n            class=\"avatar-uploader\"\r\n            action=\"/api/file/upload\"\r\n            ref=\"avatarUploadRef\"\r\n            :show-file-list=\"false\"\r\n            :http-request=\"handleAvatarUpload\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n          >\r\n            <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar w-[170px] h-[170px]\" />\r\n            <el-icon v-else class=\"avatar-uploader-icon\"><i-upload-filled /></el-icon>\r\n            <el-button type=\"text\">上传</el-button>\r\n            <!-- 添加上传按钮 -->\r\n          </el-upload>\r\n          <div v-if=\"editForm.avatar?.id\">已上传</div>\r\n        </el-form-item>\r\n\r\n        <!-- 修改音色模型试听音频为手动上传 -->\r\n        <el-form-item label=\"音色模型试听音频\">\r\n          <el-upload\r\n            class=\"upload-model-audio\"\r\n            action=\"/api/file/upload\"\r\n            ref=\"modelAudioUploadRef\"\r\n            :file-list=\"formattedModelAudioList\"\r\n            :http-request=\"handleModelAudioUpload\"\r\n            list-type=\"text\"\r\n          >\r\n            <el-button type=\"text\">上传音频</el-button>\r\n          </el-upload>\r\n          <div v-if=\"editForm.modelAudio?.id\">已上传</div>\r\n        </el-form-item>\r\n\r\n        <!-- 修改 GPT 模型上传为手动上传 -->\r\n        <el-form-item label=\"GPT模型\">\r\n          <el-upload\r\n            class=\"upload-gpt-model\"\r\n            action=\"/api/file/upload\"\r\n            ref=\"gptModelUploadRef\"\r\n            :file-list=\"formattedGptModelList\"\r\n            :http-request=\"handleGptModelUpload\"\r\n            list-type=\"text\"\r\n          >\r\n            <el-button type=\"text\">上传模型</el-button>\r\n          </el-upload>\r\n          <div v-if=\"editForm.gptModel?.id && !editForm.gptModel?.name\">已上传</div>\r\n        </el-form-item>\r\n\r\n        <!-- 修改 SoVITS 模型上传为手动上传 -->\r\n        <el-form-item label=\"SoVITS模型\">\r\n          <el-upload\r\n            class=\"upload-sovits-model\"\r\n            action=\"/api/file/upload\"\r\n            ref=\"sovitsModelUploadRef\"\r\n            :file-list=\"formattedSovitsModelList\"\r\n            :http-request=\"handleSovitsModelUpload\"\r\n            list-type=\"text\"\r\n          >\r\n            <el-button type=\"text\">上传模型</el-button>\r\n          </el-upload>\r\n          <div v-if=\"editForm.sovitsModel?.id && !editForm.sovitsModel?.name\">已上传</div>\r\n        </el-form-item>\r\n\r\n        <!-- 修改参考音频上传为手动上传 -->\r\n        <el-form-item label=\"参考音频\">\r\n          <el-upload\r\n            class=\"upload-reference-audio\"\r\n            action=\"/api/file/upload\"\r\n            ref=\"referenceAudiosUploadRef\"\r\n            :http-request=\"handleReferenceAudioUpload\"\r\n            list-type=\"text\"\r\n          >\r\n            <el-button type=\"text\">上传音频</el-button>\r\n          </el-upload>\r\n          <div v-if=\"editForm.referenceAudios.length\">\r\n            已上传 {{ editForm.referenceAudios.length }} 个文件\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"参考音频文本\">\r\n          <el-input\r\n            type=\"textarea\"\r\n            v-model=\"editForm.referenceText\"\r\n            placeholder=\"请输入参考音频文本\"\r\n            rows=\"4\"\r\n            maxlength=\"100\"\r\n            show-word-limit\r\n          ></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <template v-slot:footer>\r\n        <div class=\"dialog-footer\">\r\n          <el-button @click=\"closeEditDialog\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"uploadAllAndSave\">上传并保存</el-button>\r\n          <!-- 添加上传并保存按钮 -->\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, reactive, onMounted, watch, ref } from 'vue'\r\nimport {\r\n  postUploadFile,\r\n  postUpdateModel,\r\n  getModelList,\r\n  postAddModel,\r\n  PostDeleteModel\r\n} from '@/service/speech'\r\nimport { dashboardGenerated, dashboardRmbg, dashboardTts } from '@/service/admin/llmModelPrompt'\r\nimport { ElMessage } from 'element-plus'\r\nimport { useLLMModelPromptStore } from '../store/llmModelPromptStore'\r\nimport axios from 'axios'\r\n\r\nconst llmModelPromptStore = useLLMModelPromptStore()\r\n\r\nconst searchForm = reactive({\r\n  industry: '1',\r\n  model_id: null,\r\n  prompt: ''\r\n})\r\n\r\nconst editForm = reactive({\r\n  industry: '',\r\n  emotion: '',\r\n  name: '',\r\n  gender: '',\r\n  avatar: null,\r\n  modelAudio: null,\r\n  gptModel: null,\r\n  sovitsModel: null,\r\n  referenceAudios: [],\r\n  referenceText: ''\r\n})\r\n\r\nconst showEditDialog = ref(false)\r\n\r\nwatch(\r\n  () => searchForm.model_id,\r\n  (newVal, oldVal) => {\r\n    const selectedPrompt = prompts.value.find((prompt) => prompt.id === newVal)\r\n    if (selectedPrompt) {\r\n      searchForm.prompt = selectedPrompt.prompt\r\n    } else {\r\n      searchForm.prompt = ''\r\n    }\r\n  }\r\n)\r\n\r\nconst handleSizeChange = (val,isPublic) => {\r\n  // 切换每页条数\r\n  if(isPublic){\r\n    publicVoiceList.value.page_size = val\r\n  }else{\r\n    personVoiceList.value.page_size = val\r\n  }\r\n  fetchVoiceList(isPublic, 1, val)\r\n}\r\nconst handleCurrentChange = (val,isPublic) => {\r\n  //跳转到指定页\r\n  currentPage.value = val\r\n  if(isPublic){\r\n    fetchVoiceList(isPublic, val, publicVoiceList.value.page_size)\r\n  }else{\r\n    fetchVoiceList(isPublic, val, personVoiceList.value.page_size)\r\n  }\r\n}\r\nconst onSubmit = () => {\r\n  llmModelPromptStore.editLLMModelPrompt(searchForm.model_id, searchForm)\r\n  ElMessage.success('提交成功')\r\n}\r\n\r\nconst resetSearch = () => {\r\n  searchForm.industry = '1'\r\n  searchForm.model_id = null\r\n  searchForm.prompt = ''\r\n}\r\n\r\nconst prompts = computed(() => {\r\n  return llmModelPromptStore.prompts\r\n})\r\n\r\nconst promptOptions = computed(() => {\r\n  return prompts.value.map((prompt) => {\r\n    return {\r\n      value: prompt.id,\r\n      label: prompt.name\r\n    }\r\n  })\r\n})\r\n\r\nonMounted(() => {\r\n  llmModelPromptStore.getLLMModelPrompts().then(() => {\r\n    console.log({ prompts: prompts.value })\r\n  })\r\n  fetchVoiceList(true,1,20)\r\n  fetchVoiceList(false,1,20)\r\n})\r\n\r\nconst publicVoiceList = ref([])\r\nconst personVoiceList = ref([])\r\n\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst baseUrl = import.meta.env.VITE_API_BASE_URL\r\nconst fetchVoiceList = async (isPublic,page,pageSize) => {\r\n  const params = {\r\n      is_public: isPublic,\r\n      page: page,\r\n      page_size: pageSize\r\n    }\r\n  try {\r\n    const response = await getModelList(params)\r\n    if (response.code === 0) {\r\n      if(isPublic){\r\n        publicVoiceList.value = response.data.data\r\n        publicVoiceList.value.current_page = response.data.current_page\r\n        publicVoiceList.value.page_size = response.data.page_size\r\n        publicVoiceList.value.total_count = response.data.total_count\r\n      }else{\r\n        personVoiceList.value = response.data.data\r\n        personVoiceList.value.current_page = response.data.current_page\r\n        personVoiceList.value.page_size = response.data.page_size\r\n        personVoiceList.value.total_count = response.data.total_count\r\n      }\r\n    } else {\r\n      throw new Error(response.message || '获取音色列表失败')\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(error.message || '获取音色列表失败')\r\n  }\r\n}\r\n\r\nconst openCreateVoiceDialog = () => {\r\n  Object.assign(editForm, {\r\n    industry: '',\r\n    emotion: '',\r\n    name: '',\r\n    gender: '',\r\n    avatar: null,\r\n    modelAudio: null,\r\n    gptModel: null,\r\n    sovitsModel: null,\r\n    referenceAudios: [],\r\n    referenceText: ''\r\n  })\r\n  showEditDialog.value = true\r\n}\r\n\r\nconst imageUrl = ref(null)\r\n\r\nconst editVoice = (voice) => {\r\n  Object.assign(editForm, {\r\n    industry: voice.industry || '',\r\n    emotion: voice.emotion || '',\r\n    name: voice.name || '',\r\n    gender: voice.gender || '',\r\n    avatar: voice.avatar_id\r\n      ? {\r\n          url: `${baseUrl}${voice.avatar}`,\r\n          id: voice.avatar_id\r\n        }\r\n      : null,\r\n    modelAudio: voice.model_audio_id\r\n      ? {\r\n          id: voice.model_audio_id\r\n        }\r\n      : null,\r\n    gptModel: voice.gpt_model_id\r\n      ? {\r\n          id: voice.gpt_model_id,\r\n          name: voice.gpt_model_name // 添加模型名称\r\n        }\r\n      : null,\r\n    sovitsModel: voice.sovits_model_id\r\n      ? {\r\n          id: voice.sovits_model_id,\r\n          name: voice.sovits_model_name // 添加模型名称\r\n        }\r\n      : null,\r\n    referenceAudios: voice.reference_audios\r\n      ? voice.reference_audios.map((audio) => ({\r\n          id: audio.id,\r\n          url: `${baseUrl}${audio.url}`\r\n        }))\r\n      : [],\r\n    referenceText: voice.reference_text || ''\r\n  })\r\n  editForm.soundModel = voice?.id\r\n  imageUrl.value = `${baseUrl}${voice.avatar}`\r\n  showEditDialog.value = true\r\n}\r\n\r\nconst createVoice = async () => {\r\n  try {\r\n    const formData = new FormData()\r\n    formData.append('industry', editForm.industry)\r\n    formData.append('emotion', editForm.emotion)\r\n    formData.append('name', editForm.name)\r\n    formData.append('gender', editForm.gender)\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst closeEditDialog = () => {\r\n  showEditDialog.value = false\r\n  clearEditForm()\r\n}\r\n\r\n// 定义上传组件的 refs\r\nconst avatarUploadRef = ref(null)\r\nconst modelAudioUploadRef = ref(null)\r\nconst gptModelUploadRef = ref(null)\r\nconst sovitsModelUploadRef = ref(null)\r\nconst referenceAudiosUploadRef = ref(null)\r\n\r\nconst formattedModelAudioList = computed(() => {\r\n  return editForm.modelAudio\r\n    ? [\r\n        {\r\n          uid: editForm.modelAudio.id,\r\n          name: '模型试听音频',\r\n          status: 'done',\r\n          url: editForm.modelAudio.url\r\n        }\r\n      ]\r\n    : []\r\n})\r\n\r\nconst formattedGptModelList = computed(() => {\r\n  return editForm.gptModel\r\n    ? [\r\n        {\r\n          uid: editForm.gptModel.id,\r\n          name: editForm.gptModel.name,\r\n          status: 'done',\r\n          url: editForm.gptModel.url\r\n        }\r\n      ]\r\n    : []\r\n})\r\n\r\nconst formattedSovitsModelList = computed(() => {\r\n  return editForm.sovitsModel\r\n    ? [\r\n        {\r\n          uid: editForm.sovitsModel.id,\r\n          name: editForm.sovitsModel.name,\r\n          status: 'done',\r\n          url: editForm.sovitsModel.url\r\n        }\r\n      ]\r\n    : []\r\n})\r\n\r\nconst formattedReferenceAudios = computed(() => {\r\n  return editForm.referenceAudios.map((audio) => ({\r\n    uid: audio.id,\r\n    name: `参考音频${audio.id}`,\r\n    status: 'done',\r\n    url: audio.url\r\n  }))\r\n})\r\n\r\n// 添加上传并保存的函数\r\nconst uploadAllAndSave = async () => {\r\n  try {\r\n    // 上传成功后，保存表单数据\r\n    await saveVoice()\r\n    ElMessage.success('保存成功')\r\n    showEditDialog.value = false\r\n    await fetchVoiceList()\r\n  } catch (error) {\r\n    console.log(error)\r\n    ElMessage.error('保存失败')\r\n  }\r\n}\r\n\r\n// 修改 handleUploadSuccess 函数，确保 editForm 中的字段为对象\r\nconst handleAvatarUpload = async (options) => {\r\n  const { file, onSuccess, onError } = options\r\n  const form = new FormData()\r\n  form.append('file', file)\r\n  try {\r\n    const response = await postUploadFile(form)\r\n    if (response.code === 0) {\r\n      editForm.avatar = {\r\n        id: response.data.file_id\r\n      }\r\n      onSuccess(response.data, file)\r\n      ElMessage.success('头像图片上传成功!')\r\n    } else {\r\n      throw new Error(response.message)\r\n    }\r\n  } catch (error) {\r\n    onError(error)\r\n    ElMessage.error('头像图片上传失败!')\r\n  }\r\n}\r\n\r\nconst handleAvatarSuccess = (response, file) => {\r\n  imageUrl.value = URL.createObjectURL(file.raw)\r\n}\r\n\r\nconst handleAvatarError = (error) => {\r\n  ElMessage.error('头像图片上传失败!')\r\n}\r\n\r\nconst handleModelAudioUpload = async (options) => {\r\n  const { file, onSuccess, onError } = options\r\n  const form = new FormData()\r\n  form.append('file', file)\r\n  try {\r\n    const response = await postUploadFile(form)\r\n    if (response.code === 0) {\r\n      editForm.modelAudio = {\r\n        id: response.data.file_id,\r\n        filename: file.name\r\n      }\r\n      onSuccess(response.data, file)\r\n      ElMessage.success('音色模型试听音频上传成功!')\r\n    } else {\r\n      throw new Error(response.message)\r\n    }\r\n  } catch (error) {\r\n    onError(error)\r\n    ElMessage.error('音色模型试听音频上传失败!')\r\n  }\r\n}\r\n\r\nconst handleGptModelUpload = async (options) => {\r\n  editForm.gptModel = {}\r\n  const { file, onSuccess, onError } = options\r\n  const form = new FormData()\r\n  form.append('file', file)\r\n  try {\r\n    const response = await postUploadFile(form)\r\n    if (response.code === 0) {\r\n      editForm.gptModel = {\r\n        id: response.data.file_id,\r\n        name: file.name\r\n      }\r\n      onSuccess(response.data, file)\r\n      ElMessage.success('GPT模型上传成功!')\r\n    } else {\r\n      throw new Error(response.message)\r\n    }\r\n  } catch (error) {\r\n    onError(error)\r\n    ElMessage.error('GPT模型上传失败!')\r\n  }\r\n}\r\n\r\nconst handleSovitsModelUpload = async (options) => {\r\n  editForm.sovitsModel = {}\r\n  const { file, onSuccess, onError } = options\r\n  const form = new FormData()\r\n  form.append('file', file)\r\n  try {\r\n    const response = await postUploadFile(form)\r\n    if (response.code === 0) {\r\n      editForm.sovitsModel = {\r\n        id: response.data.file_id,\r\n        name: file.name\r\n      }\r\n      onSuccess(response.data, file)\r\n      ElMessage.success('SoVITS模型上传成功!')\r\n    } else {\r\n      throw new Error(response.message)\r\n    }\r\n  } catch (error) {\r\n    onError(error)\r\n    ElMessage.error('SoVITS模型上传失败!')\r\n  }\r\n}\r\n\r\nconst handleReferenceAudioUpload = async (options) => {\r\n  const { file, onSuccess, onError } = options\r\n  const form = new FormData()\r\n  form.append('file', file)\r\n  try {\r\n    const response = await postUploadFile(form)\r\n    if (response.code === 0) {\r\n      editForm.referenceAudios = {\r\n        id: response.data.file_id,\r\n        name: file.name\r\n      }\r\n      onSuccess(response.data, file)\r\n      ElMessage.success('参考音频上传成功!')\r\n    } else {\r\n      throw new Error(response.message)\r\n    }\r\n  } catch (error) {\r\n    onError(error)\r\n    ElMessage.error('参考音频上传失败!')\r\n  }\r\n}\r\n\r\nconst handleUploadError = (error, file) => {\r\n  ElMessage.error(`上传失败: ${file.name}`)\r\n}\r\n\r\n// 保存音色\r\nconst saveVoice = async () => {\r\n  const params = {\r\n    industry: editForm.industry,\r\n    emotion: editForm.emotion,\r\n    gender: editForm.gender,\r\n    name: editForm.name,\r\n    avatar_id: editForm.avatar.id,\r\n    audition_file_id: editForm.modelAudio?.id || '',\r\n    gpt_model_id: editForm.gptModel?.id || '',\r\n    sovits_model_id: editForm.sovitsModel?.id || '',\r\n    reference_voice_id: editForm.referenceAudios?.id || '',\r\n    reference_voice_text: editForm.referenceText,\r\n    sound_model_id: editForm.soundModel\r\n  }\r\n  if (!!editForm.soundModel && editForm.soundModel !== '') {\r\n    await postUpdateModel(params)\r\n  } else {\r\n    await postAddModel(params)\r\n  }\r\n  ElMessage.success('保存成功!')\r\n  clearEditForm()\r\n}\r\n\r\n// 删除音色\r\nconst deleteVoice = async (id) => {\r\n  await PostDeleteModel({ soundId: id })\r\n  ElMessage.success('删除成功!')\r\n  clearEditForm()\r\n  await fetchVoiceList()\r\n}\r\n\r\nconst clearEditForm = () => {\r\n  editForm.value = {\r\n    id: '',\r\n    industry: '',\r\n    emotion: '',\r\n    gender: '',\r\n    name: '',\r\n    avatar: {\r\n      id: '',\r\n      url: ''\r\n    },\r\n    modelAudio: {\r\n      id: '',\r\n      url: ''\r\n    },\r\n    gptModel: {\r\n      id: '',\r\n      name: ''\r\n    },\r\n    sovitsModel: {}\r\n  }\r\n}\r\n\r\n// 日期范围数据\r\nconst dateRange = reactive({\r\n  startDate: '',\r\n  endDate: ''\r\n})\r\n\r\n// 统计数据\r\nconst statistics = reactive({\r\n  chatbotCount: 0,\r\n  imageCount: 0,\r\n  audioCount: 0\r\n})\r\n\r\n// 日期查询方法（暂时只打印数据）\r\nconst handleDateQuery = async () => {\r\n  // 添加时间校验\r\n  if (!dateRange.startDate || !dateRange.endDate) {\r\n    ElMessage.warning('请选择开始和结束时间')\r\n    return\r\n  }\r\n  try {\r\n    const [generatedRes, rmbgRes, ttsRes] = await Promise.all([\r\n      dashboardGenerated({\r\n        start_date: dateRange.startDate,\r\n        end_date: dateRange.endDate\r\n      }).catch(err => ({ code: -1 })),  // 失败时返回错误码\r\n      dashboardRmbg({\r\n        start_date: dateRange.startDate,\r\n        end_date: dateRange.endDate\r\n      }).catch(err => ({ code: -1 })),\r\n      dashboardTts({\r\n        start_date: dateRange.startDate,\r\n        end_date: dateRange.endDate\r\n      }).catch(err => ({ code: -1 }))\r\n    ])\r\n\r\n    // 分别处理每个接口的结果\r\n    if (generatedRes.code === 0) {\r\n      statistics.chatbotCount = generatedRes.data.list || 0\r\n    }\r\n    \r\n    if (rmbgRes.code === 0) {\r\n      statistics.imageCount = rmbgRes.data.list || 0\r\n    }\r\n    \r\n    if (ttsRes.code === 0) {\r\n      statistics.audioCount = ttsRes.data.list || 0\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('查询失败:', error)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.upload-avatar i {\r\n  font-size: 28px;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding: 10px 20px;\r\n}\r\n\r\n.date-filter-container {\r\n  padding: 16px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.stat-label {\r\n  color: #606266;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #303133;\r\n}\r\n\r\n.search-form {\r\n  max-width: 800px;\r\n  margin-left: 0;\r\n}\r\n.publicSpeek{\r\n  margin: 20px 0;\r\n}\r\n.page-style{\r\n  margin-top: 10px;\r\n  display: flex;\r\n  justify-content: flex-end; /* 将内容对齐到右侧 */\r\n}\r\n</style>\r\n"],"names":["getLLMModelPrompts","request","editLLMModelPrompt","id","params","dashboardGenerated","dashboardRmbg","dashboardTts","useLLMModelPromptStore","defineStore","res","llmModelPromptStore","searchForm","reactive","editForm","showEditDialog","ref","watch","newVal","oldVal","selectedPrompt","prompts","prompt","handleSizeChange","val","isPublic","publicVoiceList","personVoiceList","fetchVoiceList","handleCurrentChange","currentPage","onSubmit","ElMessage","resetSearch","computed","promptOptions","onMounted","baseUrl","page","pageSize2","pageSize","response","getModelList","error","openCreateVoiceDialog","imageUrl","editVoice","voice","audio","clearEditForm","avatarUploadRef","modelAudioUploadRef","gptModelUploadRef","sovitsModelUploadRef","referenceAudiosUploadRef","formattedModelAudioList","formattedGptModelList","formattedSovitsModelList","uploadAllAndSave","saveVoice","options","file","onSuccess","onError","form","postUploadFile","handleModelAudioUpload","_a","_b","_c","_d","deleteVoice","PostDeleteModel","dateRange","statistics","handleDateQuery","generatedRes","rmbgRes","err","ttsRes","_ctx","_cache","__unplugin_components_0","__unplugin_components_1","_component_el_input","__unplugin_components_2","_component_el_form_item","__unplugin_components_3"],"mappings":"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"}