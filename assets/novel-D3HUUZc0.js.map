{"version":3,"file":"novel-D3HUUZc0.js","sources":["../../node_modules/mitt/dist/mitt.mjs","../../src/utils/mitt.js","../../src/service/novel.js"],"sourcesContent":["export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","import mitt from 'mitt'\r\n\r\nconst bus = mitt()\r\n\r\nexport default bus","import request from '../utils/axios'\r\nimport bus from '@/utils/mitt.js'\r\n\r\n// 添加小说\r\nexport const addNovelRequest = async (data) => {\r\n  return request({\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    url: `/novel/material/upload/novel`,\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\n// 添加素材\r\nexport const addMaterialsRequest = async (isShortPlay = false, data, callback) => {\r\n  const url = isShortPlay ? '/short_film/material/upload' : '/novel/material/upload'\r\n  return request({\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    url,\r\n    method: 'post',\r\n    data: data,\r\n    onUploadProgress: (progressEvent) => {\r\n      let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n      // 通过事件总线发送进度\r\n      // console.log(percentCompleted,'上传进度')\r\n      callback && callback(percentCompleted)\r\n      bus.emit('uploadProgress', percentCompleted)\r\n    }\r\n  })\r\n}\r\n\r\n// 获取小说材料\r\nexport const getNovelMaterialRequest = async (\r\n  isShortPlay = false,\r\n  params,\r\n  topIds = [],\r\n  tagIds = [],\r\n  isTagsAnd = true\r\n) => {\r\n  // 构建基础参数对象\r\n  const finalParams = { ...params }\r\n  let url = isShortPlay ? '/short_film/material/list' : '/novel/material/list'\r\n\r\n  // 如果有标签ID，手动构建查询字符串\r\n  if (tagIds && tagIds.length > 0) {\r\n    // 构建查询字符串\r\n    const queryParts = []\r\n\r\n    // 添加基本参数\r\n    for (const [key, value] of Object.entries(finalParams)) {\r\n      queryParts.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\r\n    }\r\n\r\n    // 添加标签ID参数\r\n    for (const id of tagIds) {\r\n      queryParts.push(`tag_ids=${encodeURIComponent(id)}`)\r\n    }\r\n\r\n    // 添加标签关系参数\r\n    queryParts.push(`tags_relation=${isTagsAnd ? 'and' : 'or'}`)\r\n\r\n    // 构建完整URL\r\n    url = `${url}?${queryParts.join('&')}`\r\n\r\n    // 使用空参数对象，因为已经在URL中包含了所有参数\r\n    return request({\r\n      url,\r\n      method: 'get'\r\n    })\r\n  }\r\n  // 如果有标签ID，手动构建查询字符串\r\n  if (topIds && topIds.length > 0) {\r\n    // 构建查询字符串\r\n    const queryParts = []\r\n    // 添加基本参数\r\n    for (const [key, value] of Object.entries(finalParams)) {\r\n      queryParts.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\r\n    }\r\n    // 添加标签ID参数\r\n    for (const id of topIds) {\r\n      queryParts.push(`top_ids=${encodeURIComponent(id)}`)\r\n    }\r\n    // 构建完整URL\r\n    url = `${url}?${queryParts.join('&')}`\r\n    // 使用空参数对象，因为已经在URL中包含了所有参数\r\n    return request({\r\n      url,\r\n      method: 'get'\r\n    })\r\n  }\r\n\r\n  // 当没有标签筛选时\r\n  return request({\r\n    url,\r\n    method: 'get',\r\n    params: finalParams\r\n  })\r\n}\r\n\r\n// 生成模拟阅读视频\r\nexport const generateSimulatedReadingRequest = async (data) => {\r\n  return request({\r\n    url: `/novel/video/generate/simulate`,\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\n// 生成解压视频\r\nexport const generateRelaxedVideoRequest = async (data) => {\r\n  return request({\r\n    url: `/novel/video/generate/relaxed`,\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\n// 历史任务-任务列表\r\nexport const getHistoryTaskListRequest = async (isShortPlay = false, params) => {\r\n  const url = isShortPlay ? `/short_film/task/list` : '/novel/video/task'\r\n  return request({\r\n    url,\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 历史任务-视频列表\r\nexport const getHistoryVideoListRequest = async (isShortPlay, params) => {\r\n  const url = isShortPlay ? `/short_film/task/video/list` : '/novel/video/list'\r\n  return request({\r\n    url,\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 历史任务-任务列表-查看详情\r\nexport const getHistoryTaskListVideoRequest = async (isShortPlay, params) => {\r\n  const url = isShortPlay ? `/short_film/task/video/list` : '/novel/video/list'\r\n  return request({\r\n    url,\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 历史任务-任务列表-调整优任务先级\r\nexport const getHistoryTaskListUpgrade = async (isShortPlay, params) => {\r\n  const url = isShortPlay ? `/short_film/task/upgrade` : '/novel/video/task/upgrade'\r\n  return request({\r\n    url,\r\n    method: 'post',\r\n    params: params,\r\n    showToast: true\r\n  })\r\n}\r\n\r\n// 历史任务-任务列表-停止任务\r\nexport const StopHistoryTask = async (isShortPlay, params) => {\r\n  const url = isShortPlay ? `/short_film/task/stop` : '/novel/video/task/stop'\r\n  return request({\r\n    url,\r\n    method: 'post',\r\n    params: params,\r\n    showToast: true\r\n  })\r\n}\r\n\r\n// 历史任务-任务列表-查找任务排名\r\nexport const getHistoryTaskPosition = async (isShortPlay, params) => {\r\n  const url = isShortPlay ? `/short_film/task/position` : '/novel/video/task/position'\r\n  return request({\r\n    url,\r\n    method: 'post',\r\n    data: params,\r\n    showToast: true\r\n  })\r\n}\r\n\r\n// 历史任务-任务列表-获取今日插队配额\r\nexport const getHistoryTaskJumpQuota = async (isShortPlay) => {\r\n  const url = isShortPlay ? `/short_film/jump/quota` : '/novel/video/jump/quota'\r\n  return request({\r\n    url,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 删除素材\r\nexport const deleteMaterialsRequest = async (data) => {\r\n  return request({\r\n    url: '/novel/material/batch_delete',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除小说\r\nexport const deleteNovelRequest = async (material_id) => {\r\n  return request({\r\n    url: `/novel/material/${material_id}/delete`,\r\n    method: 'post'\r\n  })\r\n}\r\n// 获取视频生成参数\r\nexport const getTaskParamsRequest = async (isShortPlay, task_id) => {\r\n  const url = isShortPlay ? `/short_film/task/${task_id}/params` : `/novel/video/detail/${task_id}`\r\n  return request({\r\n    url,\r\n    method: 'get'\r\n  })\r\n}\r\n// 更新小说\r\nexport const updateNovelRequest = async (data) => {\r\n  return request({\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    url: `/novel/material/update/novel`,\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\n// 标签列表 -树形\r\nexport const treeTagsList = async (params) => {\r\n  return request({\r\n    url: `/novel/material/tags/tree`,\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n// 新增标签\r\nexport const addMaterialTag = async (data) => {\r\n  return request({\r\n    url: `/novel/material/tags/add`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n// 添加标签-更新素材\r\nexport const batchUpdate = async (data) => {\r\n  return request({\r\n    url: `/novel/material/batch_update`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n// 批量迁移到共享库\r\nexport const batchShare = async (data) => {\r\n  return request({\r\n    url: `/novel/material/batch_share`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n// 共享标签\r\nexport const tagsShare = async (tag_id) => {\r\n  return request({\r\n    url: `/novel/material/tags/${tag_id}/share`,\r\n    method: 'post'\r\n  })\r\n}\r\n// 复制标签到共享库\r\nexport const copyTagsToShare = async (data) => {\r\n  return request({\r\n    url: `/novel/material/tags/copy_to_share`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 保存模拟阅读模板\r\nexport const saveSimulateReadingTemplate = async (data) => {\r\n  return request({\r\n    url: `/novel/video/template/create/simulate`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 保存解压视频模板\r\nexport const saveRelaxationVideoTemplate = async (data) => {\r\n  return request({\r\n    url: `/novel/video/template/create/relaxed`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 获取模板列表\r\nexport const getTemplateListRequest = async (params) => {\r\n  return request({\r\n    url: `/novel/video/template/list`,\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 根据模板id查询模板具体内容\r\nexport const getTemplateContentRequest = async (template_id) => {\r\n  return request({\r\n    url: `/novel/video/template/detail/${template_id}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 编辑背景图库\r\nexport const editBackgroundRequest = async (data) => {\r\n  return request({\r\n    url: `/novel/material/background_image/update`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 打包下载\r\nexport const packDownload = async (fileId) => {\r\n  return request({\r\n    url: `file/${fileId}?is_download=true`,\r\n    method: 'get'\r\n  })\r\n}\r\n// 批量移除素材标签\r\nexport const batchRemoveTags = async (data) => {\r\n  return request({\r\n    url: `/novel/material/batch_remove_tags`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 保存组合配置\r\nexport const saveGroupConfigRequest = (data) => {\r\n  return request({\r\n    url: `/novel/video/group/save`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 获取组合配置\r\nexport const getGroupConfigRequest = (params) => {\r\n  return request({\r\n    url: `/novel/video/group/load`,\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 打包任务查询\r\nexport const getGzipTaskList = async (params) => {\r\n  return request({\r\n    url: `/gzip/task/list`,\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n// 打包任务删除 /gzip/task/{task_id}/delete\r\nexport const postGzipTaskDelete = async (task_id) => {\r\n  return request({\r\n    url: `/gzip/task/${task_id}/delete`,\r\n    method: 'post'\r\n  })\r\n}\r\n//  打包任务重试 /gzip/task/{task_id}/retry\r\nexport const postGzipTaskRetry = async (task_id) => {\r\n  return request({\r\n    url: `/gzip/task/${task_id}/retry`,\r\n    method: 'post'\r\n  })\r\n}\r\n// 打包任务清空 /gzip/task/clean\r\nexport const postGzipTaskClean = async () => {\r\n  return request({\r\n    url: `/gzip/task/clean`,\r\n    method: 'post'\r\n  })\r\n}\r\n// 打包结果下载\r\nexport const getGzipDownload = async (task_id) => {\r\n  return request({\r\n    url: `/gzip/download/${task_id}`,\r\n    method: 'get'\r\n  })\r\n}\r\n// 任务一键打包\r\nexport const postNovelVideoPackTask = async (isShortPlay, task_id) => {\r\n  const url = isShortPlay ? `/short_film/pack/task/${task_id}` : `/novel/video/pack/task/${task_id}`\r\n  return request({\r\n    url,\r\n    method: 'post'\r\n  })\r\n}\r\n// 多个视频打包\r\nexport const postNovelVideoPackVideo = async (isShortPlay, data) => {\r\n  const url = isShortPlay ? `/short_film/pack/video` : `/novel/video/pack/video`\r\n  return request({\r\n    url,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n"],"names":["mitt","n","t","e","i","bus","addNovelRequest","data","request","addMaterialsRequest","isShortPlay","callback","progressEvent","percentCompleted","getNovelMaterialRequest","params","topIds","tagIds","isTagsAnd","finalParams","url","queryParts","key","value","id","generateSimulatedReadingRequest","generateRelaxedVideoRequest","getHistoryTaskListRequest","getHistoryVideoListRequest","getHistoryTaskListVideoRequest","getHistoryTaskListUpgrade","StopHistoryTask","getHistoryTaskPosition","getHistoryTaskJumpQuota","getTaskParamsRequest","task_id","treeTagsList","addMaterialTag","saveGroupConfigRequest","getGroupConfigRequest","getGzipTaskList","postGzipTaskDelete","postGzipTaskRetry","postGzipTaskClean","postNovelVideoPackTask","postNovelVideoPackVideo"],"mappings":"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","x_google_ignoreList":[0]}